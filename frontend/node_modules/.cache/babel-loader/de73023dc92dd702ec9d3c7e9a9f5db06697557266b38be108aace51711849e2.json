{"ast":null,"code":"var _jsxFileName = \"/Users/aryaman/TechQueryRecommender/frontend/src/Kanban.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Modal from './Modal'; // Make sure this import points to where your Modal.js is\nimport './Kanban.css'; // Make sure to create a CSS file for basic styling\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst KanbanBoard = () => {\n  _s();\n  const [board, setBoard] = useState([]);\n  const [isLoading, setIsLoading] = useState(true); // Added isLoading state\n  const [error, setError] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false); // State to control modal visibility\n\n  const fetchDepartments = async () => {\n    setIsLoading(true); // Set loading state\n    try {\n      const response = await axios.get('http://localhost:4000/api/department/departments');\n      console.log('Data fetched:', response.data); // Check the fetched data\n      const deptMap = new Map();\n      response.data.forEach(dept => {\n        const name = dept.name.trim().toLowerCase();\n        const tasks = dept.supportQueries.map(query => ({\n          id: query._id,\n          title: query.queryText\n        }));\n        if (!deptMap.has(name)) {\n          deptMap.set(name, {\n            _id: dept._id,\n            // Keep first _id (not critical)\n            name: dept.name,\n            tasks\n          });\n        } else {\n          const existing = deptMap.get(name);\n          existing.tasks.push(...tasks);\n        }\n      });\n      setBoard(Array.from(deptMap.values()));\n    } catch (error) {\n      console.error('Error fetching departments:', error);\n      setError(error);\n    } finally {\n      setIsLoading(false); // Reset loading state\n    }\n  };\n  useEffect(() => {\n    fetchDepartments();\n  }, []);\n  const handleAddQueryClick = () => {\n    setIsModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n  const handleSubmitQuery = async queryText => {\n    setIsModalOpen(false);\n    try {\n      const response = await axios.post('http://localhost:4000/api/query/createQuery', {\n        queryText\n      });\n      // After successfully creating the query, re-fetch the updated board data\n      await fetchDepartments(); // You can call this function directly to refresh the board\n    } catch (error) {\n      console.error('Failed to add query:', error);\n      setError(error);\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"An error occurred: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 12\n    }, this);\n  }\n  if (!board.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data found. Click \\\"Add Query\\\" to create a new query.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 12\n    }, this);\n  }\n\n  //Creation of a Department (unused but here if needed)\n  const handleCreateDepartment = async departmentName => {\n    try {\n      const response = await axios.post('http://localhost:4000/api/department/createDepartment', {\n        name: departmentName\n      });\n      if (response.data) {\n        setBoard([...board, response.data]); // Assuming the backend returns the created department\n      }\n    } catch (error) {\n      console.error('Failed to create department:', error);\n      setError(error);\n    }\n  };\n\n  //Deletion of a Department (unused but here if needed)\n  const handleDeleteDepartment = async departmentId => {\n    try {\n      await axios.delete(`http://localhost:4000/api/department/departments/${departmentId}`);\n      setBoard(board.filter(dept => dept._id !== departmentId)); // Remove the department from the state\n    } catch (error) {\n      console.error('Failed to delete department:', error);\n      setError(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban-header\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddQueryClick,\n        children: \"Add Query\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: handleCloseModal,\n      onSubmit: handleSubmitQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"Query Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban-board\",\n      children: board.map(department => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kanban-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: department.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), department.tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kanban-task\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this)\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this))]\n      }, department._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(KanbanBoard, \"d9QG2G/c29YzvZZScGp9wLiIGcI=\");\n_c = KanbanBoard;\nexport default KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","useState","useEffect","axios","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","KanbanBoard","_s","board","setBoard","isLoading","setIsLoading","error","setError","isModalOpen","setIsModalOpen","fetchDepartments","response","get","console","log","data","deptMap","Map","forEach","dept","name","trim","toLowerCase","tasks","supportQueries","map","query","id","_id","title","queryText","has","set","existing","push","Array","from","values","handleAddQueryClick","handleCloseModal","handleSubmitQuery","post","children","fileName","_jsxFileName","lineNumber","columnNumber","message","length","handleCreateDepartment","departmentName","handleDeleteDepartment","departmentId","delete","filter","className","onClick","isOpen","onClose","onSubmit","department","task","_c","$RefreshReg$"],"sources":["/Users/aryaman/TechQueryRecommender/frontend/src/Kanban.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Modal from './Modal'; // Make sure this import points to where your Modal.js is\nimport './Kanban.css'; // Make sure to create a CSS file for basic styling\n\nconst KanbanBoard = () => {\n  const [board, setBoard] = useState([]);\n  const [isLoading, setIsLoading] = useState(true); // Added isLoading state\n  const [error, setError] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false); // State to control modal visibility\n\n\n  const fetchDepartments = async () => {\n    setIsLoading(true); // Set loading state\n    try {\n      const response = await axios.get('http://localhost:4000/api/department/departments');\n      console.log('Data fetched:', response.data); // Check the fetched data\n      const deptMap = new Map();\n\nresponse.data.forEach(dept => {\n  const name = dept.name.trim().toLowerCase();\n\n  const tasks = dept.supportQueries.map(query => ({\n    id: query._id,\n    title: query.queryText\n  }));\n\n  if (!deptMap.has(name)) {\n    deptMap.set(name, {\n      _id: dept._id, // Keep first _id (not critical)\n      name: dept.name,\n      tasks\n    });\n  } else {\n    const existing = deptMap.get(name);\n    existing.tasks.push(...tasks);\n  }\n});\n\nsetBoard(Array.from(deptMap.values()));\n\n    } catch (error) {\n      console.error('Error fetching departments:', error);\n      setError(error);\n    } finally {\n      setIsLoading(false); // Reset loading state\n    }\n  };\n\n\n  useEffect(() => {\n\n    fetchDepartments();\n  }, []);\n\n  const handleAddQueryClick = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleSubmitQuery = async (queryText) => {\n    setIsModalOpen(false);\n    try {\n      const response = await axios.post('http://localhost:4000/api/query/createQuery', {\n        queryText\n      });\n      // After successfully creating the query, re-fetch the updated board data\n      await fetchDepartments(); // You can call this function directly to refresh the board\n    } catch (error) {\n      console.error('Failed to add query:', error);\n      setError(error);\n    }\n  };\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>An error occurred: {error.message}</div>;\n  }\n\n  if (!board.length) {\n    return <div>No data found. Click \"Add Query\" to create a new query.</div>;\n  }\n\n\n  //Creation of a Department (unused but here if needed)\n  const handleCreateDepartment = async (departmentName) => {\n    try {\n      const response = await axios.post('http://localhost:4000/api/department/createDepartment', {\n        name: departmentName\n      });\n      if (response.data) {\n        setBoard([...board, response.data]); // Assuming the backend returns the created department\n      }\n    } catch (error) {\n      console.error('Failed to create department:', error);\n      setError(error);\n    }\n  };\n\n  //Deletion of a Department (unused but here if needed)\n  const handleDeleteDepartment = async (departmentId) => {\n    try {\n      await axios.delete(`http://localhost:4000/api/department/departments/${departmentId}`);\n      setBoard(board.filter(dept => dept._id !== departmentId)); // Remove the department from the state\n    } catch (error) {\n      console.error('Failed to delete department:', error);\n      setError(error);\n    }\n  };\n\n\n  return (\n    <>\n    \n      <div className=\"kanban-header\">\n        <button onClick={handleAddQueryClick}>Add Query</button>\n      </div>\n      <Modal isOpen={isModalOpen} onClose={handleCloseModal} onSubmit={handleSubmitQuery} />\n      <div className=\"title\">\n        Query Board\n      </div>\n      <div className=\"kanban-board\">\n        {board.map(department => (\n          <div key={department._id} className=\"kanban-column\">\n            <h2>{department.name}</h2>\n            {department.tasks.map(task => (\n              <div key={task.id} className=\"kanban-task\">\n                <p>{task.title}</p>\n                {/* Buttons or links to move and delete tasks */}\n              </div>\n            ))}\n            {/* Button or form to add new tasks */}\n          </div>\n        ))}\n      </div>\n    </>\n  );  \n};\n\nexport default KanbanBoard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS,CAAC,CAAC;AAC7B,OAAO,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvB,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAClD,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAGvD,MAAMkB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnCL,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;IACpB,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAC,kDAAkD,CAAC;MACpFC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;MAC7C,MAAMC,OAAO,GAAG,IAAIC,GAAG,CAAC,CAAC;MAE/BN,QAAQ,CAACI,IAAI,CAACG,OAAO,CAACC,IAAI,IAAI;QAC5B,MAAMC,IAAI,GAAGD,IAAI,CAACC,IAAI,CAACC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QAE3C,MAAMC,KAAK,GAAGJ,IAAI,CAACK,cAAc,CAACC,GAAG,CAACC,KAAK,KAAK;UAC9CC,EAAE,EAAED,KAAK,CAACE,GAAG;UACbC,KAAK,EAAEH,KAAK,CAACI;QACf,CAAC,CAAC,CAAC;QAEH,IAAI,CAACd,OAAO,CAACe,GAAG,CAACX,IAAI,CAAC,EAAE;UACtBJ,OAAO,CAACgB,GAAG,CAACZ,IAAI,EAAE;YAChBQ,GAAG,EAAET,IAAI,CAACS,GAAG;YAAE;YACfR,IAAI,EAAED,IAAI,CAACC,IAAI;YACfG;UACF,CAAC,CAAC;QACJ,CAAC,MAAM;UACL,MAAMU,QAAQ,GAAGjB,OAAO,CAACJ,GAAG,CAACQ,IAAI,CAAC;UAClCa,QAAQ,CAACV,KAAK,CAACW,IAAI,CAAC,GAAGX,KAAK,CAAC;QAC/B;MACF,CAAC,CAAC;MAEFpB,QAAQ,CAACgC,KAAK,CAACC,IAAI,CAACpB,OAAO,CAACqB,MAAM,CAAC,CAAC,CAAC,CAAC;IAElC,CAAC,CAAC,OAAO/B,KAAK,EAAE;MACdO,OAAO,CAACP,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDC,QAAQ,CAACD,KAAK,CAAC;IACjB,CAAC,SAAS;MACRD,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB;EACF,CAAC;EAGDZ,SAAS,CAAC,MAAM;IAEdiB,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM4B,mBAAmB,GAAGA,CAAA,KAAM;IAChC7B,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAM8B,gBAAgB,GAAGA,CAAA,KAAM;IAC7B9B,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,MAAM+B,iBAAiB,GAAG,MAAOV,SAAS,IAAK;IAC7CrB,cAAc,CAAC,KAAK,CAAC;IACrB,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMjB,KAAK,CAAC+C,IAAI,CAAC,6CAA6C,EAAE;QAC/EX;MACF,CAAC,CAAC;MACF;MACA,MAAMpB,gBAAgB,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdO,OAAO,CAACP,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CC,QAAQ,CAACD,KAAK,CAAC;IACjB;EACF,CAAC;EAED,IAAIF,SAAS,EAAE;IACb,oBAAOP,OAAA;MAAA6C,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,IAAIxC,KAAK,EAAE;IACT,oBAAOT,OAAA;MAAA6C,QAAA,GAAK,qBAAmB,EAACpC,KAAK,CAACyC,OAAO;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACtD;EAEA,IAAI,CAAC5C,KAAK,CAAC8C,MAAM,EAAE;IACjB,oBAAOnD,OAAA;MAAA6C,QAAA,EAAK;IAAuD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC3E;;EAGA;EACA,MAAMG,sBAAsB,GAAG,MAAOC,cAAc,IAAK;IACvD,IAAI;MACF,MAAMvC,QAAQ,GAAG,MAAMjB,KAAK,CAAC+C,IAAI,CAAC,uDAAuD,EAAE;QACzFrB,IAAI,EAAE8B;MACR,CAAC,CAAC;MACF,IAAIvC,QAAQ,CAACI,IAAI,EAAE;QACjBZ,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAES,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC,CAAC;MACvC;IACF,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdO,OAAO,CAACP,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDC,QAAQ,CAACD,KAAK,CAAC;IACjB;EACF,CAAC;;EAED;EACA,MAAM6C,sBAAsB,GAAG,MAAOC,YAAY,IAAK;IACrD,IAAI;MACF,MAAM1D,KAAK,CAAC2D,MAAM,CAAC,oDAAoDD,YAAY,EAAE,CAAC;MACtFjD,QAAQ,CAACD,KAAK,CAACoD,MAAM,CAACnC,IAAI,IAAIA,IAAI,CAACS,GAAG,KAAKwB,YAAY,CAAC,CAAC,CAAC,CAAC;IAC7D,CAAC,CAAC,OAAO9C,KAAK,EAAE;MACdO,OAAO,CAACP,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDC,QAAQ,CAACD,KAAK,CAAC;IACjB;EACF,CAAC;EAGD,oBACET,OAAA,CAAAE,SAAA;IAAA2C,QAAA,gBAEE7C,OAAA;MAAK0D,SAAS,EAAC,eAAe;MAAAb,QAAA,eAC5B7C,OAAA;QAAQ2D,OAAO,EAAElB,mBAAoB;QAAAI,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC,eACNjD,OAAA,CAACF,KAAK;MAAC8D,MAAM,EAAEjD,WAAY;MAACkD,OAAO,EAAEnB,gBAAiB;MAACoB,QAAQ,EAAEnB;IAAkB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtFjD,OAAA;MAAK0D,SAAS,EAAC,OAAO;MAAAb,QAAA,EAAC;IAEvB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNjD,OAAA;MAAK0D,SAAS,EAAC,cAAc;MAAAb,QAAA,EAC1BxC,KAAK,CAACuB,GAAG,CAACmC,UAAU,iBACnB/D,OAAA;QAA0B0D,SAAS,EAAC,eAAe;QAAAb,QAAA,gBACjD7C,OAAA;UAAA6C,QAAA,EAAKkB,UAAU,CAACxC;QAAI;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACzBc,UAAU,CAACrC,KAAK,CAACE,GAAG,CAACoC,IAAI,iBACxBhE,OAAA;UAAmB0D,SAAS,EAAC,aAAa;UAAAb,QAAA,eACxC7C,OAAA;YAAA6C,QAAA,EAAImB,IAAI,CAAChC;UAAK;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC,GADXe,IAAI,CAAClC,EAAE;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGZ,CACN,CAAC;MAAA,GAPMc,UAAU,CAAChC,GAAG;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASnB,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAAC7C,EAAA,CA1IID,WAAW;AAAA8D,EAAA,GAAX9D,WAAW;AA4IjB,eAAeA,WAAW;AAAC,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}